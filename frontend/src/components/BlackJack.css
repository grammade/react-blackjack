html,
body,
#root {
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.header {
  font-weight: 700;
  font-size: 400px;
  position: fixed;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  background: -webkit-linear-gradient(right, #721b63, #002352);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-wrap: nowrap;
  z-index: -10;
}

body {
  background: linear-gradient(to bottom right, #882474, #122a42);
  color: white;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.hand-sum {
  position: absolute;
  bottom: 10px;
  right: 10px;
  margin: 0;
}

.BtnContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
  margin-bottom: 20px;
}

.CenterButtons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    position: absolute; /* Position absolute within the container */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Center horizontally */
}

.Btn {
  background-color: rgba(0, 0, 0, 0.4);
  width: 100px;
  color: white;
  border-color: transparent;
  border-radius: 5px;
  text-align: center;
  padding-top: 5px; padding-bottom: 5px;
}

.StickRight{
  margin-left: auto;
}

.Btn:hover {
    background-color: rgba(0, 0, 0, 0.7); /* Slightly darker on hover */
}

.Btn:active {
    background-color: rgba(0, 0, 0, 0.9); /* Even darker when clicked */
}

.wl-ratio-container {
  background: linear-gradient(to left, #721b63, #081d30);
  width: 100%;
  padding: 10px;
  border-radius: 5px;
}

.headerContainer {
  position: fixed;
  top: 200px;
  left: 0;
  width: 100%;
  height: 50vh;
  /* Half of the viewport height */
  overflow: hidden;
  /* Hide the overflowing content */
  display: flex;
  justify-content: center;
  align-items: flex-end;
  /* Align the text to the bottom */
}

.card-container {
  min-height: 200px;
  border: 2px dashed #ffffff;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 20px;
  padding: 10px;
  position: relative;
}

.cardHand {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.card {
  margin: 2px;
  display: flex;
  flex-direction: column;
  align-items: center;
  /* Center align items horizontally */
  justify-content: space-between;
  border: 1px solid #000;
  /* Add a border for better visualization */
  padding: 0px;
  /* Add padding inside the card */
  width: 100px;
  /* Set a fixed width */
  height: 150px;
  /* Set a fixed height */
  background-color: black;
  /* Background color for the card */
  border-radius: 10px;
  /* Rounded corners */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  /* Subtle shadow for 3D effect */
  position: relative;
  overflow: hidden;
  color: white;
  /* Color for the card value */
  mix-blend-mode: soft-light;
  flex: 0 1 auto; /* Allow flexible width, not shrinking beyond content size */
  max-width: 100px; /* Limit maximum width */
  min-width: 30px; /* Limit minimum width */
  transition: width 0.5s ease-out;
}

.card.fade-in {
  animation: fadeInFromRight 0.5s ease-out;
}

.card.move-left {
  animation: moveLeft 0.5s ease-out;
}

@keyframes fadeInFromRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }

  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes moveLeft {
  0% {
    transform: translateX(50px); 
  }

  100% {
    transform: translateX(0);
    /* Adjust the value as needed */
  }
}

.suit {
  margin-top: -10%;
  position: absolute;
  font-size: 80px;
  /* Adjust the size of the suit symbol */
  height: 80px;
  opacity: 0.6;
}

.cardValue {
  top: 65%;
  position: absolute;
  font-size: 32px;
  /* Adjust the size of the card value */
}

@keyframes border-win {
  0% {
    border-color: white;
  }

  50% {
    border-color: rgb(0, 248, 0);
  }

  100% {
    border-color: white;
  }
}

@keyframes border-lose {
  0% {
    border-color: white;
  }

  50% {
    border-color: red;
  }

  100% {
    border-color: white;
  }
}

.border-win {
  animation: border-win 1s forwards;
}

.border-lose {
  animation: border-lose 1s forwards;
}